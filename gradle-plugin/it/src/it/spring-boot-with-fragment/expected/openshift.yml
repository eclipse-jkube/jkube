#
# Copyright (c) 2019 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at:
#
#     https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Red Hat, Inc. - initial API and implementation
#

---
apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: spring-boot-with-fragment
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: spring-boot-with-fragment
      provider: jkube
      group: org.eclipse.jkube.integration.tests.gradle
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      provider: jkube
      app: spring-boot-with-fragment
      version: "@ignore@"
      group: org.eclipse.jkube.integration.tests.gradle
    name: spring-boot-with-fragment
  spec:
    replicas: 1
    selector:
      app: spring-boot-with-fragment
      provider: jkube
      group: org.eclipse.jkube.integration.tests.gradle
    template:
      metadata:
        labels:
          provider: jkube
          app: spring-boot-with-fragment
          version: "@ignore@"
          group: org.eclipse.jkube.integration.tests.gradle
      spec:
        containers:
        - env:
          - name: ABC
            value: dummy
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: spring-boot-with-fragment:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
          name: spring-boot
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
          securityContext:
            privileged: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - spring-boot
          from:
            kind: ImageStreamTag
            name: spring-boot-with-fragment:latest
        type: ImageChange
