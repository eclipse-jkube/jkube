<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2019 Red Hat, Inc.
    This program and the accompanying materials are made
    available under the terms of the Eclipse Public License 2.0
    which is available at:

        https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0

    Contributors:
      Red Hat, Inc. - initial API and implementation

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.eclipse.jkube.quickstarts.kit</groupId>
  <artifactId>dynamic-docker-image-file-multi-layer</artifactId>
  <version>1.15.0</version>
  <name>Eclipse JKube :: Quickstarts :: Kit :: Docker Image from Multilayer Dockerfile</name>
  <packaging>jar</packaging>

  <description>
    Eclipse JKube Kit example showing how to Dynamically generate a Docker image.
    The generated image contains multiple COPY statements which allows the generation of a multilayered container image.
  </description>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <jkube.version>${project.version}</jkube.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.eclipse.jkube</groupId>
      <artifactId>jkube-kit-config-service</artifactId>
      <version>${jkube.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <configuration>
          <mainClass>org.eclipse.jkube.quickstart.kit.docker.dynamic.Main</mainClass>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
