<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2019 Red Hat, Inc.
    This program and the accompanying materials are made
    available under the terms of the Eclipse Public License 2.0
    which is available at:

        https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0

    Contributors:
      Red Hat, Inc. - initial API and implementation

-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.eclipse.jkube.quickstarts.maven</groupId>
        <artifactId>javaee8-webprofile-liberty</artifactId>
        <version>0.2.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>javaee8-webprofile-liberty-app</artifactId>
    <version>0.2.1-SNAPSHOT</version>
    <name>Eclipse JKube :: Quickstarts :: Maven :: JavaEE 8 WebProfile :: Application</name>
    <packaging>war</packaging>


    <properties>
        <maven.compile.source>1.8</maven.compile.source>
        <maven.compile.target>1.8</maven.compile.target>

        <testServerHost>*</testServerHost>
        <testServerHttpPort>9080</testServerHttpPort>
        <testServerHttpsPort>9443</testServerHttpsPort>
        <applicationContext>libertyapi</applicationContext>
    </properties>

    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.eclipse.jkube</groupId>
                <artifactId>kubernetes-maven-plugin</artifactId>
                <version>${project.version}</version>
                <configuration>
                    <mode>kubernetes</mode>
                    <namespace>${docker.user}</namespace>
                    <images>
                        <image>
                            <name>${docker.user}/${project.artifactId}:${project.version}</name>
                            <alias>meeting-reservation-service</alias>
                            <build>
                                <from>websphere-liberty:beta</from>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                                <!-- basic Dockerfile commands -->
                                <assembly>
                                    <mode>dir</mode>
                                    <inline>
                                        <files>
                                            <file>
                                                <source>src/main/wlp/server.xml</source>
                                                <outputDirectory>.</outputDirectory>
                                            </file>
                                            <file>
                                                <source>src/main/wlp/bootstrap.properties</source>
                                                <outputDirectory>.</outputDirectory>
                                                <filtered>true</filtered>
                                            </file>
                                            <file>
                                                <source>${project.build.directory}/${project.artifactId}.war</source>
                                                <outputDirectory>./apps</outputDirectory>
                                            </file>
                                        </files>
                                    </inline>
                                    <targetDir>/opt/ibm/wlp/usr/servers/defaultServer</targetDir>
                                </assembly>
                                <ports>${testServerHttpPort}</ports>
                            </build>
                            <watch>
                                <interval>5000</interval>
                            </watch>
                        </image>
                    </images>
                    <enricher>
                        <config>
                            <!--
                                expose the service externally by Kubernetes
                            -->
                            <jkube-service>
                                <type>NodePort</type>
                                <port>${testServerHttpPort}:${testServerHttpPort}</port> <!-- if the port was unset, the expose would be ignored -->
                            </jkube-service>
                        </config>
                    </enricher>
                </configuration>
                <executions>
                    <execution>
                        <id>build-images</id>
                        <goals>
                            <goal>resource</goal>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <warName>${project.artifactId}</warName>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
