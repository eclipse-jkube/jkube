#
# Copyright (c) 2019 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at:
#
#     https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Red Hat, Inc. - initial API and implementation
#
name: Integration Tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 1 * * *' # Everyday at 1

env:
  JKUBE_IT_REPOSITORY: https://github.com/jkubeio/jkube-integration-tests.git
  JKUBE_IT_REVISION: master
  JKUBE_IT_DIR: jkube-integration-tests

jobs:
  minikube:
    name: K8S
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes: [v1.17.2,v1.12.0]
        suite: ['quarkus','quarkus-native','springboot','webapp','other']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v1.0.0
        with:
          minikube version: v1.5.1
          kubernetes version: ${{ matrix.kubernetes }}
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Install JKube
        run: mvn -f pom.xml -B -DskipTests clean install
      - name: Checkout JKube Integration Tests Repository
        run: |
          git clone "$JKUBE_IT_REPOSITORY" \
          && cd $JKUBE_IT_DIR \
          && git checkout "$JKUBE_IT_REVISION"
      - name: Install and Run Integration Tests
        run: |
          JKUBE_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) \
          && cd $JKUBE_IT_DIR \
          && ./mvnw -B -PKubernetes,${{ matrix.suite }} clean verify -Djkube.version="$JKUBE_VERSION"
      - name: Consolidate reports
        run: |
          mkdir -p ./reports \
          && cp -R ./$JKUBE_IT_DIR/it/target/failsafe-reports ./reports
      - name: Save reports as artifact
        uses: actions/upload-artifact@master
        with:
          name: Test reports (Minikube ${{ matrix.kubernetes }}-${{ matrix.suite }} )
          path: ./reports
  openshift:
    name: OpenShift
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        openshift: [v3.11.0,v3.9.0]
        suite: ['quarkus','springboot','webapp','other']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup OpenShift
        uses: manusa/actions-setup-openshift@v1.0.1
        with:
          oc version: ${{ matrix.openshift }}
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Install JKube
        run: mvn -f pom.xml -B -DskipTests clean install
      - name: Checkout JKube Integration Tests Repository
        run: |
          git clone "$JKUBE_IT_REPOSITORY" \
          && cd $JKUBE_IT_DIR \
          && git checkout "$JKUBE_IT_REVISION"
      - name: Install and Run Integration Tests
        run: |
          JKUBE_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) \
          && cd $JKUBE_IT_DIR \
          && ./mvnw -B -POpenShift,${{ matrix.suite }} clean verify -Djkube.version="$JKUBE_VERSION" -Djunit.jupiter.execution.parallel.config.fixed.parallelism=1
      - name: Consolidate reports
        run: |
          mkdir -p ./reports \
          && cp -R ./$JKUBE_IT_DIR/it/target/failsafe-reports ./reports
      - name: Save reports as artifact
        uses: actions/upload-artifact@master
        with:
          name: Test reports (OpenShift ${{ matrix.openshift }}-${{ matrix.suite }})
          path: ./reports
